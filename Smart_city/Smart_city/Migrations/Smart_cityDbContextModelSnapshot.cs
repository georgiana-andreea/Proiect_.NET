// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smart_city.DatabaseContext;

namespace Smart_city.Migrations
{
    [DbContext(typeof(Smart_cityDbContext))]
    partial class Smart_cityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Smart_city.ViewModels.Pubele", b =>
                {
                    b.Property<int>("PubelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PubelaNume")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PubelaId");

                    b.ToTable("Pubele");
                });

            modelBuilder.Entity("Smart_city.ViewModels.Sector", b =>
                {
                    b.Property<int>("SectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SectorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SectorId");

                    b.ToTable("Sector");
                });

            modelBuilder.Entity("Smart_city.ViewModels.raport_teren", b =>
                {
                    b.Property<int>("RaportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PubelaId")
                        .HasColumnType("int");

                    b.Property<int>("StareIncarcare")
                        .HasColumnType("int");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("RaportId");

                    b.HasIndex("PubelaId");

                    b.HasIndex("ZonaId");

                    b.ToTable("raport_teren");
                });

            modelBuilder.Entity("Smart_city.ViewModels.zone_sector", b =>
                {
                    b.Property<int>("ZonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SectorId")
                        .HasColumnType("int");

                    b.Property<string>("ZonaNume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZonaId");

                    b.HasIndex("SectorId");

                    b.ToTable("zone_sector");
                });

            modelBuilder.Entity("Smart_city.ViewModels.raport_teren", b =>
                {
                    b.HasOne("Smart_city.ViewModels.Pubele", "Pubela")
                        .WithMany()
                        .HasForeignKey("PubelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smart_city.ViewModels.zone_sector", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pubela");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Smart_city.ViewModels.zone_sector", b =>
                {
                    b.HasOne("Smart_city.ViewModels.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });
#pragma warning restore 612, 618
        }
    }
}
